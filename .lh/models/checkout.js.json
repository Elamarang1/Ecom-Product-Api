{
    "sourceFile": "models/checkout.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1754668521324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754668866182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,51 @@\n const mongoose = require('mongoose');\r\n \r\n-const checkoutSchema = new mongoose.Schema({\r\n-  customerName: { type: String, required: true },\r\n+const VariantSchema = new mongoose.Schema({\r\n+  sku: String,\r\n+  size: String,\r\n+  color: String,\r\n+  image_id: Number\r\n+}, { _id: false });\r\n+\r\n+const ImageSchema = new mongoose.Schema({\r\n+  image_id: Number,\r\n+  alt: String,\r\n+  src: String,\r\n+  variant_id: [Number]\r\n+}, { _id: false });\r\n+\r\n+const ProductSchema = new mongoose.Schema({\r\n+  _id: String,\r\n+  title: String,\r\n+  description: String,\r\n+  type: String,\r\n+  brand: String,\r\n+  collection: [String],\r\n+  category: String,\r\n+  price: Number,\r\n+  sale: Boolean,\r\n+  discount: String,\r\n+  stock: Number,\r\n+  new: Boolean,\r\n+  tags: [String],\r\n+  variants: [VariantSchema],\r\n+  images: [ImageSchema],\r\n+  __v: Number,\r\n+  quantity: Number\r\n+}, { _id: false });\r\n+\r\n+const CheckoutSchema = new mongoose.Schema({\r\n+  firstname: { type: String, required: true },\r\n+  lastname: { type: String, required: true },\r\n   email: { type: String, required: true },\r\n   phone: { type: String, required: true },\r\n+  country: { type: String, required: true },\r\n   address: { type: String, required: true },\r\n-  products: [\r\n-    {\r\n-      productId: { type: mongoose.Schema.Types.ObjectId, ref: 'Product' },\r\n-      quantity: { type: Number, required: true },\r\n-      price: { type: Number, required: true }\r\n-    }\r\n-  ],\r\n-  totalAmount: { type: Number, required: true },\r\n-  paymentStatus: { type: String, enum: ['pending', 'paid', 'failed'], default: 'pending' },\r\n-  razorpayOrderId: { type: String },\r\n-  razorpayPaymentId: { type: String },\r\n-  createdAt: { type: Date, default: Date.now }\r\n-});\r\n+  town: { type: String, required: true },\r\n+  state: { type: String, required: true },\r\n+  postalcode: { type: String, required: true },\r\n+  paymentMethod: { type: String, required: true },\r\n+  products: [ProductSchema],\r\n+}, { timestamps: true });\r\n \r\n-module.exports = mongoose.model('Checkout', checkoutSchema);\r\n+module.exports = mongoose.model('Checkout', CheckoutSchema);\r\n"
                },
                {
                    "date": 1756269560428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,60 @@\n+// const mongoose = require('mongoose');\r\n+\r\n+// const VariantSchema = new mongoose.Schema({\r\n+//   sku: String,\r\n+//   size: String,\r\n+//   color: String,\r\n+//   image_id: Number\r\n+// }, { _id: false });\r\n+\r\n+// const ImageSchema = new mongoose.Schema({\r\n+//   image_id: Number,\r\n+//   alt: String,\r\n+//   src: String,\r\n+//   variant_id: [Number]\r\n+// }, { _id: false });\r\n+\r\n+// const ProductSchema = new mongoose.Schema({\r\n+//   _id: String,\r\n+//   title: String,\r\n+//   description: String,\r\n+//   type: String,\r\n+//   brand: String,\r\n+//   collection: [String],\r\n+//   category: String,\r\n+//   price: Number,\r\n+//   sale: Boolean,\r\n+//   discount: String,\r\n+//   stock: Number,\r\n+//   new: Boolean,\r\n+//   tags: [String],\r\n+//   variants: [VariantSchema],\r\n+//   images: [ImageSchema],\r\n+//   __v: Number,\r\n+//   quantity: Number\r\n+// }, { _id: false });\r\n+\r\n+// const CheckoutSchema = new mongoose.Schema({\r\n+//   firstname: { type: String, required: true },\r\n+//   lastname: { type: String, required: true },\r\n+//   email: { type: String, required: true },\r\n+//   phone: { type: String, required: true },\r\n+//   country: { type: String, required: true },\r\n+//   address: { type: String, required: true },\r\n+//   town: { type: String, required: true },\r\n+//   state: { type: String, required: true },\r\n+//   postalcode: { type: String, required: true },\r\n+//   paymentMethod: { type: String, required: true },\r\n+//   products: [ProductSchema],\r\n+// }, { timestamps: true });\r\n+\r\n+// module.exports = mongoose.model('Checkout', CheckoutSchema);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n const mongoose = require('mongoose');\r\n \r\n const VariantSchema = new mongoose.Schema({\r\n   sku: String,\r\n@@ -33,8 +89,86 @@\n   __v: Number,\r\n   quantity: Number\r\n }, { _id: false });\r\n \r\n+// Shipping schema\r\n+const ShippingSchema = new mongoose.Schema({\r\n+  label: String,\r\n+  rate: Number,\r\n+  etd: String,\r\n+  estimated_delivery_days: String,\r\n+  courier: {\r\n+    air_max_weight: String,\r\n+    api_edd: Number,\r\n+    assured_amount: Number,\r\n+    base_courier_id: mongoose.Schema.Types.Mixed,\r\n+    base_weight: String,\r\n+    blocked: Number,\r\n+    call_before_delivery: String,\r\n+    charge_weight: Number,\r\n+    city: String,\r\n+    cod: Number,\r\n+    cod_charges: Number,\r\n+    cod_multiplier: Number,\r\n+    cost: String,\r\n+    courier_company_id: Number,\r\n+    courier_name: String,\r\n+    courier_type: String,\r\n+    coverage_charges: Number,\r\n+    cutoff_time: String,\r\n+    delivery_boy_contact: String,\r\n+    delivery_performance: Number,\r\n+    description: String,\r\n+    edd: String,\r\n+    edd_fallback: mongoose.Schema.Types.Mixed,\r\n+    entry_tax: Number,\r\n+    estimated_delivery_days: String,\r\n+    etd: String,\r\n+    etd_hours: Number,\r\n+    freight_charge: Number,\r\n+    id: Number,\r\n+    is_custom_rate: Number,\r\n+    is_hyperlocal: Boolean,\r\n+    is_international: Number,\r\n+    is_rto_address_available: Boolean,\r\n+    is_surface: Boolean,\r\n+    local_region: Number,\r\n+    metro: Number,\r\n+    min_weight: Number,\r\n+    mode: Number,\r\n+    new_edd: Number,\r\n+    odablock: Boolean,\r\n+    other_charges: Number,\r\n+    others: String,\r\n+    pickup_availability: String,\r\n+    pickup_performance: Number,\r\n+    pickup_priority: String,\r\n+    pickup_supress_hours: Number,\r\n+    pod_available: String,\r\n+    postcode: String,\r\n+    qc_courier: Number,\r\n+    rank: String,\r\n+    rate: Number,\r\n+    rating: Number,\r\n+    realtime_tracking: String,\r\n+    region: Number,\r\n+    rto_charges: Number,\r\n+    rto_performance: Number,\r\n+    seconds_left_for_pickup: Number,\r\n+    secure_shipment_disabled: Boolean,\r\n+    ship_type: Number,\r\n+    state: String,\r\n+    suppress_date: String,\r\n+    suppress_text: String,\r\n+    suppression_dates: mongoose.Schema.Types.Mixed,\r\n+    surface_max_weight: String,\r\n+    tracking_performance: Number,\r\n+    volumetric_max_weight: mongoose.Schema.Types.Mixed,\r\n+    weight_cases: Number,\r\n+    zone: String\r\n+  }\r\n+}, { _id: false });\r\n+\r\n const CheckoutSchema = new mongoose.Schema({\r\n   firstname: { type: String, required: true },\r\n   lastname: { type: String, required: true },\r\n   email: { type: String, required: true },\r\n@@ -45,7 +179,8 @@\n   state: { type: String, required: true },\r\n   postalcode: { type: String, required: true },\r\n   paymentMethod: { type: String, required: true },\r\n   products: [ProductSchema],\r\n+  shipping: ShippingSchema   // ðŸ”¹ Added shipping here\r\n }, { timestamps: true });\r\n \r\n module.exports = mongoose.model('Checkout', CheckoutSchema);\r\n"
                }
            ],
            "date": 1754668521324,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\r\n\r\nconst checkoutSchema = new mongoose.Schema({\r\n  customerName: { type: String, required: true },\r\n  email: { type: String, required: true },\r\n  phone: { type: String, required: true },\r\n  address: { type: String, required: true },\r\n  products: [\r\n    {\r\n      productId: { type: mongoose.Schema.Types.ObjectId, ref: 'Product' },\r\n      quantity: { type: Number, required: true },\r\n      price: { type: Number, required: true }\r\n    }\r\n  ],\r\n  totalAmount: { type: Number, required: true },\r\n  paymentStatus: { type: String, enum: ['pending', 'paid', 'failed'], default: 'pending' },\r\n  razorpayOrderId: { type: String },\r\n  razorpayPaymentId: { type: String },\r\n  createdAt: { type: Date, default: Date.now }\r\n});\r\n\r\nmodule.exports = mongoose.model('Checkout', checkoutSchema);\r\n"
        }
    ]
}