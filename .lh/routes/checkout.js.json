{
    "sourceFile": "routes/checkout.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754668523449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754668877552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,59 +1,59 @@\n const express = require('express');\r\n const router = express.Router();\r\n const Checkout = require('../models/checkout');\r\n \r\n-// CREATE\r\n+// Create new checkout\r\n router.post('/', async (req, res) => {\r\n   try {\r\n     const checkout = new Checkout(req.body);\r\n     await checkout.save();\r\n-    res.status(201).json({ message: 'Checkout created', data: checkout });\r\n-  } catch (err) {\r\n-    res.status(500).json({ error: err.message });\r\n+    res.status(201).json({ message: 'Checkout created successfully', data: checkout });\r\n+  } catch (error) {\r\n+    res.status(400).json({ message: 'Error creating checkout', error: error.message });\r\n   }\r\n });\r\n \r\n-// READ ALL\r\n+// Get all checkouts\r\n router.get('/', async (req, res) => {\r\n   try {\r\n-    const allCheckouts = await Checkout.find().populate('products.productId');\r\n-    res.json(allCheckouts);\r\n-  } catch (err) {\r\n-    res.status(500).json({ error: err.message });\r\n+    const checkouts = await Checkout.find();\r\n+    res.json(checkouts);\r\n+  } catch (error) {\r\n+    res.status(500).json({ message: 'Error fetching checkouts', error: error.message });\r\n   }\r\n });\r\n \r\n-// READ ONE\r\n+// Get single checkout by ID\r\n router.get('/:id', async (req, res) => {\r\n   try {\r\n-    const checkout = await Checkout.findById(req.params.id).populate('products.productId');\r\n-    if (!checkout) return res.status(404).json({ error: 'Checkout not found' });\r\n+    const checkout = await Checkout.findById(req.params.id);\r\n+    if (!checkout) return res.status(404).json({ message: 'Checkout not found' });\r\n     res.json(checkout);\r\n-  } catch (err) {\r\n-    res.status(500).json({ error: err.message });\r\n+  } catch (error) {\r\n+    res.status(500).json({ message: 'Error fetching checkout', error: error.message });\r\n   }\r\n });\r\n \r\n-// UPDATE\r\n+// Update checkout\r\n router.put('/:id', async (req, res) => {\r\n   try {\r\n     const updated = await Checkout.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n-    if (!updated) return res.status(404).json({ error: 'Checkout not found' });\r\n-    res.json({ message: 'Checkout updated', data: updated });\r\n-  } catch (err) {\r\n-    res.status(500).json({ error: err.message });\r\n+    if (!updated) return res.status(404).json({ message: 'Checkout not found' });\r\n+    res.json({ message: 'Checkout updated successfully', data: updated });\r\n+  } catch (error) {\r\n+    res.status(400).json({ message: 'Error updating checkout', error: error.message });\r\n   }\r\n });\r\n \r\n-// DELETE\r\n+// Delete checkout\r\n router.delete('/:id', async (req, res) => {\r\n   try {\r\n     const deleted = await Checkout.findByIdAndDelete(req.params.id);\r\n-    if (!deleted) return res.status(404).json({ error: 'Checkout not found' });\r\n-    res.json({ message: 'Checkout deleted' });\r\n-  } catch (err) {\r\n-    res.status(500).json({ error: err.message });\r\n+    if (!deleted) return res.status(404).json({ message: 'Checkout not found' });\r\n+    res.json({ message: 'Checkout deleted successfully' });\r\n+  } catch (error) {\r\n+    res.status(500).json({ message: 'Error deleting checkout', error: error.message });\r\n   }\r\n });\r\n \r\n module.exports = router;\r\n"
                }
            ],
            "date": 1754668523449,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst router = express.Router();\r\nconst Checkout = require('../models/checkout');\r\n\r\n// CREATE\r\nrouter.post('/', async (req, res) => {\r\n  try {\r\n    const checkout = new Checkout(req.body);\r\n    await checkout.save();\r\n    res.status(201).json({ message: 'Checkout created', data: checkout });\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\n// READ ALL\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    const allCheckouts = await Checkout.find().populate('products.productId');\r\n    res.json(allCheckouts);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\n// READ ONE\r\nrouter.get('/:id', async (req, res) => {\r\n  try {\r\n    const checkout = await Checkout.findById(req.params.id).populate('products.productId');\r\n    if (!checkout) return res.status(404).json({ error: 'Checkout not found' });\r\n    res.json(checkout);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\n// UPDATE\r\nrouter.put('/:id', async (req, res) => {\r\n  try {\r\n    const updated = await Checkout.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!updated) return res.status(404).json({ error: 'Checkout not found' });\r\n    res.json({ message: 'Checkout updated', data: updated });\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\n// DELETE\r\nrouter.delete('/:id', async (req, res) => {\r\n  try {\r\n    const deleted = await Checkout.findByIdAndDelete(req.params.id);\r\n    if (!deleted) return res.status(404).json({ error: 'Checkout not found' });\r\n    res.json({ message: 'Checkout deleted' });\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}